openapi: 3.0.3
info:
  title: Inditex Pricing API
  version: 1.0.0
  description: |
    REST API to query the applicable price of a product for a given brand at a specific date and time.
    
    **Business Rules:**
    - If multiple prices are valid for the same query, the one with the highest priority applies
    - Prices are filtered by brand, product, and application date/time
    - Date ranges are inclusive (startDate ≤ applicationDate ≤ endDate)
    
    **Authentication:** This API NOT requires API key authentication.
  contact:
    name: Inditex API Support
    email: api-support@inditex.com
    url: https://developer.inditex.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://developer.inditex.com/terms

servers:
  - url: https://api.inditex.com/pricing/v1
    description: Production server
  - url: https://api-staging.inditex.com/pricing/v1
    description: Staging server


tags:
  - name: Prices
    description: Operations related to product pricing queries and management
    externalDocs:
      description: Find out more about pricing
      url: https://docs.inditex.com/pricing

paths:
  /prices:
    get:
      tags: [Prices]
      summary: Get applicable price for a product
      description: |
        Retrieves the applicable price for a specific product and brand combination 
        at a given date and time. When multiple price ranges are valid, returns 
        the one with the highest priority.
        
        **Use Cases:**
        - E-commerce price display
        - Point-of-sale pricing
        - Promotional price validation
      operationId: getApplicablePrice
      parameters:
        - name: productId
          in: query
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 1
            maxLength: 20
            example: "35455"
          example: "35455"
        - name: brandId
          in: query
          required: true
          description: Unique identifier of the brand
          schema:
            type: string
            pattern: '^[0-9]+$'
            minLength: 1
            maxLength: 10
            example: "1"
          example: "1"
        - name: applicationDate
          in: query
          required: true
          description: |
            Date and time (ISO-8601 format) for which the price should be applied.
            Must be in UTC timezone. Format: YYYY-MM-DDTHH:mm:ssZ
          schema:
            type: string
            format: date-time
            example: "2020-06-14T16:00:00Z"
          example: "2020-06-14T16:00:00Z"
      responses:
        '200':
          description: Successfully retrieved the applicable price
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponse'
              examples:
                standard_price:
                  summary: Standard product price
                  description: Example of a regular product price response
                  value:
                    productId: "35455"
                    brandId: "1"
                    priceList: "2"
                    startDate: "2020-06-14T15:00:00Z"
                    endDate: "2020-06-14T18:30:00Z"
                    priority: 1
                    price:
                      amount: 35.50
                      currency: "EUR"
                promotional_price:
                  summary: Promotional price
                  description: Example of a promotional price with higher priority
                  value:
                    productId: "35455"
                    brandId: "1"
                    priceList: "4"
                    startDate: "2020-06-14T15:00:00Z"
                    endDate: "2020-12-31T18:30:00Z"
                    priority: 3
                    price:
                      amount: 25.45
                      currency: "EUR"
        '400':
          description: Bad request - Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                invalid_product_id:
                  summary: Invalid product ID
                  value:
                    code: "INVALID_PARAMETER"
                    message: "Invalid productId format"
                    details: ["productId must contain only numeric characters"]
                    timestamp: "2020-06-14T16:00:00Z"
                    path: "/api/v1/prices"
                missing_parameter:
                  summary: Missing required parameter
                  value:
                    code: "MISSING_PARAMETER"
                    message: "Required parameter missing"
                    details: ["brandId is required"]
                    timestamp: "2020-06-14T16:00:00Z"
                    path: "/api/v1/prices"
        '404':
          description: Not found - No applicable price found for the given parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                price_not_found:
                  summary: No price found
                  value:
                    code: "PRICE_NOT_FOUND"
                    message: "No applicable price found for given parameters"
                    details: ["No price list active for product 35455, brand 1 at 2020-06-14T16:00:00Z"]
                    timestamp: "2020-06-14T16:00:00Z"
                    path: "/api/v1/prices"
        '429':
          description: Too many requests - Rate limit exceeded
          headers:
            Retry-After:
              description: Number of seconds to wait before making another request
              schema:
                type: integer
                example: 60
            X-RateLimit-Limit:
              description: Maximum number of requests allowed per time window
              schema:
                type: integer
                example: 1000
            X-RateLimit-Remaining:
              description: Number of requests remaining in current time window
              schema:
                type: integer
                example: 0
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                rate_limit_exceeded:
                  summary: Rate limit exceeded
                  value:
                    code: "RATE_LIMIT_EXCEEDED"
                    message: "Too many requests"
                    details: ["Rate limit of 1000 requests per hour exceeded"]
                    timestamp: "2020-06-14T16:00:00Z"
                    path: "/api/v1/prices"
        '500':
          description: Internal server error - Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                internal_error:
                  summary: Server error
                  value:
                    code: "INTERNAL_SERVER_ERROR"
                    message: "An unexpected error occurred"
                    details: []
                    timestamp: "2020-06-14T16:00:00Z"
                    path: "/api/v1/prices"

components:

  schemas:
    Money:
      type: object
      description: Represents a monetary amount with currency
      required: [amount, currency]
      properties:
        amount:
          type: number
          format: double
          description: The monetary amount (positive number)
          minimum: 0
          multipleOf: 0.01
          example: 35.50
        currency:
          type: string
          description: ISO 4217 currency code
          pattern: '^[A-Z]{3}$'
          minLength: 3
          maxLength: 3
          example: "EUR"
      example:
        amount: 35.50
        currency: "EUR"

    PriceResponse:
      type: object
      description: Contains the applicable price information for a product
      required: [productId, brandId, priceList, startDate, endDate, priority, price]
      properties:
        productId:
          type: string
          description: Unique identifier of the product
          pattern: '^[0-9]+$'
          example: "35455"
        brandId:
          type: string
          description: Unique identifier of the brand
          pattern: '^[0-9]+$'
          example: "1"
        priceList:
          type: string
          description: |
            Identifier of the price list that was applied. Different price lists
            may represent different pricing strategies (regular, promotional, seasonal, etc.)
          example: "2"
        startDate:
          type: string
          format: date-time
          description: Start date and time when this price becomes valid (inclusive)
          example: "2020-06-14T15:00:00Z"
        endDate:
          type: string
          format: date-time
          description: End date and time when this price stops being valid (inclusive)
          example: "2020-06-14T18:30:00Z"
        priority:
          type: integer
          format: int32
          description: |
            Priority level of this price (higher number = higher priority).
            When multiple prices are valid, the one with highest priority is selected.
          minimum: 0
          maximum: 10
          example: 1
        price:
          $ref: '#/components/schemas/Money'
      example:
        productId: "35455"
        brandId: "1"
        priceList: "2"
        startDate: "2020-06-14T15:00:00Z"
        endDate: "2020-06-14T18:30:00Z"
        priority: 1
        price:
          amount: 35.50
          currency: "EUR"

    ApiError:
      type: object
      description: Standard error response format
      required: [code, message, timestamp, path]
      properties:
        code:
          type: string
          description: Machine-readable error code
          enum:
            - "INVALID_PARAMETER"
            - "MISSING_PARAMETER"
            - "UNAUTHORIZED"
            - "PRICE_NOT_FOUND"
            - "RATE_LIMIT_EXCEEDED"
            - "INTERNAL_SERVER_ERROR"
          example: "PRICE_NOT_FOUND"
        message:
          type: string
          description: Human-readable error message
          minLength: 1
          maxLength: 500
          example: "No applicable price found for given parameters"
        details:
          type: array
          description: Additional details about the error (optional)
          items:
            type: string
            maxLength: 200
          maxItems: 10
          example: ["No price list active for product 35455, brand 1 at 2020-06-14T16:00:00Z"]
        timestamp:
          type: string
          format: date-time
          description: When the error occurred (ISO-8601 format)
          example: "2020-06-14T16:00:00Z"
        path:
          type: string
          description: API endpoint path where the error occurred
          example: "/api/v1/prices"
      example:
        code: "PRICE_NOT_FOUND"
        message: "No applicable price found for given parameters"
        details: ["No price list active for product 35455, brand 1 at 2020-06-14T16:00:00Z"]
        timestamp: "2020-06-14T16:00:00Z"
        path: "/api/v1/prices"